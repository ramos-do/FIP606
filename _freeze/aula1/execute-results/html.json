{
  "hash": "9e3f775f81770a2cdb8544dd890cba04",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Aula 1 - Introdução ao R\"\nauthor: Danilo Oliveira Ramos\nformat: html\n---\n\n\n\n\n# Introdução ao R\n\nPara darmos início ao uso do software R, primeiro temos que conhecer como ele funciona. Abaixo segue algumas explicações básicas a respeito de como ele funciona.\n\n![](images/data_r.png)\n\n## **R Markdown**\n\nO **R Markdown** é uma ferramenta do R que permite combinar **texto formatado** (como em Word), **código em R** e seus **resultados (gráficos, tabelas, etc.)** em um único documento. Ele é muito útil para criar relatórios dinâmicos, trabalhos acadêmicos, análises reprodutíveis e apresentações. Usa uma sintaxe simples de formatação (como `#` para títulos e `**texto**` para negrito), e os trechos de código são colocados em blocos chamados de *chunks*. Ao \"tecer\" o documento (knit), o R executa o código e gera um arquivo final (HTML, PDF ou Word) com texto e resultados integrados.\n\n## Como inserir textos ou códigos no R\n\nNo **R Markdown**, inserir texto é simples: você digita normalmente como em um editor de texto comum. Para formatar, usa-se uma sintaxe leve chamada **Markdown** — por exemplo, `# Título` cria um título, `**negrito**` deixa o texto em negrito, e `*itálico*` em itálico. Já os **códigos em R** são inseridos em blocos chamados **chunks**, que começam com três crases e `{r}` , por exemplo:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(mtcars)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n      mpg             cyl             disp             hp       \n Min.   :10.40   Min.   :4.000   Min.   : 71.1   Min.   : 52.0  \n 1st Qu.:15.43   1st Qu.:4.000   1st Qu.:120.8   1st Qu.: 96.5  \n Median :19.20   Median :6.000   Median :196.3   Median :123.0  \n Mean   :20.09   Mean   :6.188   Mean   :230.7   Mean   :146.7  \n 3rd Qu.:22.80   3rd Qu.:8.000   3rd Qu.:326.0   3rd Qu.:180.0  \n Max.   :33.90   Max.   :8.000   Max.   :472.0   Max.   :335.0  \n      drat             wt             qsec             vs        \n Min.   :2.760   Min.   :1.513   Min.   :14.50   Min.   :0.0000  \n 1st Qu.:3.080   1st Qu.:2.581   1st Qu.:16.89   1st Qu.:0.0000  \n Median :3.695   Median :3.325   Median :17.71   Median :0.0000  \n Mean   :3.597   Mean   :3.217   Mean   :17.85   Mean   :0.4375  \n 3rd Qu.:3.920   3rd Qu.:3.610   3rd Qu.:18.90   3rd Qu.:1.0000  \n Max.   :4.930   Max.   :5.424   Max.   :22.90   Max.   :1.0000  \n       am              gear            carb      \n Min.   :0.0000   Min.   :3.000   Min.   :1.000  \n 1st Qu.:0.0000   1st Qu.:3.000   1st Qu.:2.000  \n Median :0.0000   Median :4.000   Median :2.000  \n Mean   :0.4062   Mean   :3.688   Mean   :2.812  \n 3rd Qu.:1.0000   3rd Qu.:4.000   3rd Qu.:4.000  \n Max.   :1.0000   Max.   :5.000   Max.   :8.000  \n```\n\n\n:::\n:::\n\n\n\n\nDentro desses blocos, você escreve comandos em R como faria no console. Ao \"tecer\" (knit) o documento, o R executa esses códigos e mostra os resultados no relatório final, junto com o texto explicativo. Isso permite criar relatórios dinâmicos e reprodutíveis com código e interpretação no mesmo lugar.\n\n## Como Instalar e Carregar de Pacotes:\n\n-   O pacote **`agricolae`** contém funções úteis para experimentação agrícola;\n\n-   **`tidyverse`** é uma coleção de pacotes para manipulação e visualização de dados\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninstall.packages(\"tidyverse\")\ninstall.packages(\"agricolae\")\nlibrary(tidyverse)\nlibrary(agricolae)\n```\n:::\n\n\n\n\n## Data.frame\n\nA função `data.frame()` no R é usada para criar tabelas de dados com colunas de diferentes tipos (números, textos, lógicos etc.), onde cada linha representa uma observação. É uma das estruturas mais básicas e importantes do R, ideal para armazenar e manipular dados de forma organizada. As colunas podem ser acessadas facilmente por nome (com `$`) ou por índice, e a função permite criar conjuntos de dados personalizados.\n\n## **Análise de área abaixo da curva de progresso da doença - AUDPC**\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Vetor com as datas das avaliações da doença (em dias após o plantio)\ndates <- c(14,21,28)\ndates\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 14 21 28\n```\n\n\n:::\n\n```{.r .cell-code}\n# Severidade da doença em cada data correspondente\nseverity <- c(40,80,90)\nseverity\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 40 80 90\n```\n\n\n:::\n\n```{.r .cell-code}\n# Cálculo da AUDPC com base nos valores de severidade e datas\naudpc(severity, dates, type = \"absolute\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nevaluation \n      1015 \n```\n\n\n:::\n\n```{.r .cell-code}\n# type = \"absolute\" calcula a área total sob a curva (sem normalizar)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Explorando conjunto de dados de exemplo (incluso no pacote agricolae)\ndata(corn)  # dataset com dados simulados de milho\nstr(corn)   # estrutura do objeto 'corn'\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n'data.frame':\t34 obs. of  3 variables:\n $ method     : int  1 1 1 1 1 1 1 1 1 2 ...\n $ observation: int  83 91 94 89 89 96 91 92 90 91 ...\n $ rx         : num  11 23 28.5 17 17 31.5 23 26 19.5 23 ...\n```\n\n\n:::\n:::\n\n\n\n\n## Criando um gráfico de progresso da doença\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Definindo datas e severidade de uma curva simulada\ndates <- c(7, 14, 21, 28, 35, 42)\nseverity <- c(0.1, 5, 10, 35, 50, 60)\n\n# Criando um data frame com as datas e severidade\ndata_curva <- data.frame(dates, severity)\n\n# Usando o operador |> (pipe) para aplicar funções de forma sequencial\n# Criamos uma nova coluna chamada 'severity2' com dados ajustados para visualização\n\ndata_curva |>  \n  mutate(severity2 = c(1, 10, 35, 58, 70, 79)) |> \n  ggplot(aes(dates, severity2)) +  # Mapeamento estético: eixo x = datas, eixo y = severidade2\n  geom_area(fill = \"blue\") +       # Área sob a curva (cor azul)\n  geom_line(linewidth = 2, color = \"red\") +  # Linha vermelha grossa\n  geom_point(size = 4, color = \"yellow\") +   # Pontos de avaliação (amarelos)\n  labs(x = \"Dias após o plantio\", y = \"Severidade\") +  # Rótulos dos eixos\n  scale_y_continuous(limits = c(0, 100))     # Limite do eixo y de 0 a 100\n```\n\n::: {.cell-output-display}\n![](aula1_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}