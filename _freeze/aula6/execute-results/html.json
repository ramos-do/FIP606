{
  "hash": "2d78dc9d5cf31970858923e61fcaf44c",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Aula 6 - Regressão não-linear\"\nauthor: Danilo Oliveira Ramos\nformat: html\n---\n\n\n\n# Regressão não-linear\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(gsheet)\nlibrary(tidyverse)\nfungi <- gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit?gid=465348652#gid=465348652\")\n\n# visualizando os dados\nfungi |> \n  group_by(code, dose) |> \n  summarise(germination = mean(germination)) |> \n  ggplot(aes(dose, germination))+\n  geom_point()+\n  geom_line()+\n  facet_wrap(~ code)\n```\n\n::: {.cell-output-display}\n![](aula6_files/figure-html/unnamed-chunk-1-1.png){width=672}\n:::\n\n```{.r .cell-code}\nFGT43 <- fungi |> \n  group_by(code, dose) |> \n  summarise(germination = mean(germination)) |> \n  filter(code == \"FGT43\")\n\nlibrary(drc)\n\nm43 <- drm(germination ~ dose, data = FGT43, fct = LL.3())\n\n# fct é o modelo escolhido\n\nsummary(m43)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nModel fitted: Log-logistic (ED50 as parameter) with lower limit at 0 (3 parms)\n\nParameter estimates:\n\n               Estimate Std. Error t-value   p-value    \nb:(Intercept)  1.219692   0.175081  6.9664  0.006069 ** \nd:(Intercept) 48.486911   1.456007 33.3013 5.952e-05 ***\ne:(Intercept)  0.495895   0.060851  8.1494  0.003864 ** \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error:\n\n 1.636105 (3 degrees of freedom)\n```\n\n\n:::\n\n```{.r .cell-code}\nAIC(m43)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 26.7762\n```\n\n\n:::\n\n```{.r .cell-code}\nplot(m43)\n```\n\n::: {.cell-output-display}\n![](aula6_files/figure-html/unnamed-chunk-1-2.png){width=672}\n:::\n\n```{.r .cell-code}\nED(m43, 50)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nEstimated effective doses\n\n       Estimate Std. Error\ne:1:50 0.495895   0.060851\n```\n\n\n:::\n\n```{.r .cell-code}\n# pacote para estimar a EC50\nlibrary(ec50estimator)\n\ndf_ec50 = estimate_EC50(germination ~ dose, \n                        data = fungi, \n                        isolate_col = \"code\", \n                        strata_col =  \"state\", \n                        interval = \"delta\", \n                        fct = drc::LL.3())\n\n#gera uma tabela chamada df_ec50 c0m as informações que serão usadas para plotar o gráfico\n\ndf_ec50 |> \n  ggplot(aes(reorder(ID, Estimate), Estimate))+\n  geom_point()+\n  coord_flip()\n```\n\n::: {.cell-output-display}\n![](aula6_files/figure-html/unnamed-chunk-1-3.png){width=672}\n:::\n\n```{.r .cell-code}\n# reorder irá ordernar do menor para o maior de acordo com a estimativa de ec50\n\ndf_ec50 |> \n  ggplot(aes(x = Estimate))+\n  geom_histogram(bins = 5, color = \"white\")\n```\n\n::: {.cell-output-display}\n![](aula6_files/figure-html/unnamed-chunk-1-4.png){width=672}\n:::\n\n```{.r .cell-code}\n# histograma funciona para observar a distribuição dos dados, qual o padrão das frequencias\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}